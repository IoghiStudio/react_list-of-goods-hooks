{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","reverseList","NONE","sortType","sortItems","goods","visibleGoods","sort","prev","curr","ALPHABET","localeCompare","LENGTH","length","reverse","console","log","getReorderedGoods","needRemoveButton","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAwCE,IAAME,EAAoB,WAC/B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA8BF,mBAASH,EAASM,MAAhD,mBAAOC,EAAP,KAAiBC,EAAjB,KAEMC,EAjCD,SACLA,EADK,GAGJ,IADCF,EACF,EADEA,SAAUH,EACZ,EADYA,WAENM,EAAY,YAAOD,GAsBzB,OApBAC,EAAaC,MAAK,SAACC,EAAMC,GACvB,OAAQN,GACN,KAAKP,EAASc,SACZ,OAAOF,EAAKG,cAAcF,GAE5B,KAAKb,EAASgB,OACZ,OAAOJ,EAAKK,OAASJ,EAAKI,OAE5B,QACE,OAAO,MAITb,GACFM,EAAaQ,UAIfC,QAAQC,IAAIb,EAAUH,GAEfM,EAOOW,CAAkBpB,EAAiB,CAAEG,aAAYG,aACzDe,EAAmBlB,GAAcG,IAAaP,EAASM,KAE7D,OACE,sBAAKiB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CACE,WAAYlB,IAAaP,EAASc,WAGtCY,QAAS,kBAAMlB,EAAUR,EAASc,WARpC,iCAaA,wBACEU,KAAK,SACLD,UAAWE,IACT,oBACA,CACE,WAAYlB,IAAaP,EAASgB,SAGtCU,QAAS,kBAAMlB,EAAUR,EAASgB,SARpC,4BAaA,wBACEQ,KAAK,SACLD,UAAWE,IACT,mBACA,CACE,YAA2B,IAAfrB,IAGhBsB,QAAS,kBAAMrB,GAAaD,IAR9B,qBAcCkB,GACC,wBACEE,KAAK,SACLD,UAAU,4BACVG,QAAS,WACPrB,GAAY,GACZG,EAAUR,EAASM,OALvB,sBAaJ,6BACE,6BACGG,EAAMkB,KAAI,SAAAC,GAAI,OACb,oBAAe,UAAQ,OAAvB,SACGA,GADMA,cC1HrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.39ee5dc9.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((prev, curr) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return prev.localeCompare(curr);\n\n      case SortType.LENGTH:\n        return prev.length - curr.length;\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport const App: React.FC<{}> = () => {\n  const [isReversed, reverseList] = useState(false);\n  const [sortType, sortItems] = useState(SortType.NONE);\n\n  const goods = getReorderedGoods(goodsFromServer, { isReversed, sortType });\n  const needRemoveButton = isReversed || sortType !== SortType.NONE;\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-info',\n            {\n              'is-light': sortType !== SortType.ALPHABET,\n            },\n          )}\n          onClick={() => sortItems(SortType.ALPHABET)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-success',\n            {\n              'is-light': sortType !== SortType.LENGTH,\n            },\n          )}\n          onClick={() => sortItems(SortType.LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button is-danger',\n            {\n              'is-light': isReversed !== true,\n            },\n          )}\n          onClick={() => reverseList(!isReversed)}\n        >\n\n          Reverse\n        </button>\n\n        {needRemoveButton && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={() => {\n              reverseList(false);\n              sortItems(SortType.NONE);\n            }}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        <ul>\n          {goods.map(good => (\n            <li key={good} data-cy=\"Good\">\n              {good}\n            </li>\n          ))}\n        </ul>\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}